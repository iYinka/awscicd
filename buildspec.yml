version: 0.2

env:
  variables:
    COVERAGE_THRESHOLD: 80
    NODE_ENV: test
  # secrets-manager:
  #   GITHUB_TOKEN: gitcodebuild

phases:
  install:
    commands:
      - echo Installing dependencies...
      - npm install
  pre_build:
    commands:
      - echo Running lint...
      - npm run lint
  build:
    commands:
      - echo Running unit tests with coverage...
      - npm run test -- --coverage --coverageReporters=text-summary --watchAll=false
      - COVERAGE=$(npx nyc report --reporter=text-summary | grep -Po 'All files.*?\K\d+(?=%)')
      - echo "Coverage is $COVERAGE%"
      # - |
      #   if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then
      #     echo "Coverage is less than $COVERAGE_THRESHOLD%, failing the build...";
      #     COMMENT="Coverage is $COVERAGE%, which is below the $COVERAGE_THRESHOLD% threshold.";
      #     curl -H "Authorization: token $GITHUB_TOKEN" \
      #          -H "Content-Type: application/json" \
      #          -X POST \
      #          -d "{\"body\":\"$COMMENT\"}" \
      #          "https://api.github.com/repos/$CODEBUILD_SOURCE_REPO_NAME/issues/$CODEBUILD_SOURCE_VERSION/comments";
      #     exit 1;
      #   else
      #     echo "Coverage is above $COVERAGE_THRESHOLD%, proceeding...";
      #     COMMENT="Coverage is $COVERAGE%, build successful.";
      #     curl -H "Authorization: token $GITHUB_TOKEN" \
      #          -H "Content-Type: application/json" \
      #          -X POST \
      #          -d "{\"body\":\"$COMMENT\"}" \
      #          "https://api.github.com/repos/$CODEBUILD_SOURCE_REPO_NAME/issues/$CODEBUILD_SOURCE_VERSION/comments";
      #   fi
  post_build:
    commands:
      - echo Build completed successfully.

artifacts:
  files:
    - "**/*"
